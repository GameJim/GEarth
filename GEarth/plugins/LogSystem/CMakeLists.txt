
# FIXME: For OS X, need flag for Framework or dylib
IF(${ROOT_NAME}_BUILD_SHARED_LIBS)
    ADD_DEFINITIONS(-DUTIL_LOGSYSTEM_LIBRARY)
ELSE()
    ADD_DEFINITIONS(-DUTIL_LOGSYSTEM_LIBRARY_STATIC)
ENDIF()

SET(LIB_NAME LogSystem)

cmake_policy(SET CMP0020 NEW)
IF(NOT MSVC)
	SET(LIBRARY_OUTPUT_PATH "${LIBRARY_OUTPUT_PATH}/${PLUGINS}")
	SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${PLUGINS}")
ENDIF()
SET(CMAKE_SHARED_MODULE_PREFIX ${PLUGIN_PREFIX})
SET(TARGET_DEFAULT_PREFIX "util_")
SET(TARGET_DEFAULT_LABEL_PREFIX "Plugins")

#SET(HEADER_PATH ${${ROOT_NAME}_SOURCE_DIR}/include/${LIB_NAME})
#FILE(GLOB_RECURSE TARGET_PUBLIC_H ${HEADER_PATH}/*.h ${HEADER_PATH}/*.hpp)
FILE(GLOB_RECURSE TARGET_H *.h *.hpp)
#list(APPEND TARGET_H ${TARGET_PUBLIC_H})
FILE(GLOB_RECURSE TARGET_SRC *.cpp *.c)
# FILE(GLOB_RECURSE TARGET_UI *.ui)
# FILE(GLOB_RECURSE TARGET_RESOURCE *.qrc *.rc)


find_package(PThread REQUIRED)
# find_package(Qt5Core REQUIRED)
# find_package(Qt5Gui REQUIRED)
# find_package(Qtitan REQUIRED)
# find_package(OSG REQUIRED)
# find_package(LibConfig REQUIRED)

 INCLUDE_DIRECTORIES(${${ROOT_NAME}_SOURCE_DIR}/include
	 ${BOOST_INCLUDE_DIR}
	# ${Qt5Core_INCLUDE_DIRS}
	# ${Qt5Widgets_INCLUDE_DIRS}
	# ${Qtitan_INCLUDE_DIR}
	# ${osgEarth_INCLUDE_DIR}
	# ${OSG_INCLUDE_DIR}
	# ${LIBCONFIG_INCLUDE_DIR}
)
LINK_DIRECTORIES(${BOOST_LIB_DIRS})
ADD_DEFINITIONS(-DBOOST_ALL_NO_LIB -DBOOST_LIB_DIAGNOSTIC)

SET(TARGET_COMMON_LIBRARIES util)

SET(TARGET_EXTERNAL_LIBRARIES 
	${BOOST_LOG_LIBRARY}
	${BOOST_DATE_TIME_LIBRARY}
	${BOOST_THREAD_LIBRARY}
	${BOOST_SYSTEM_LIBRARY}
	${BOOST_FILESYSTEM_LIBRARY}
	${BOOST_CHRONO_LIBRARY}
	${BOOST_REGEX_LIBRARY}
	${BOOST_ATOMIC_LIBRARY}
	${BOOST_LOG_SETUP_LIBRARY})

	
# SET(TARGET_LIBRARIES_VARS
        # Qtitan_LIBRARIES
		# Qt5Gui_LIBRARIES
		# Qt5Widgets_LIBRARIES
		# Qt5Core_LIBRARIES)

#LINK_INTERNAL(${LIB_NAME}
#    OpenThreads
#)
#LINK_EXTERNAL(${LIB_NAME} ${CMAKE_THREAD_LIBS_INIT}    ${MATH_LIBRARY} ${RT_LIBRARY} ${DL_LIBRARY})
#LINK_CORELIB_DEFAULT(${LIB_NAME} ${CMAKE_THREAD_LIBS_INIT} ${MATH_LIBRARY} ${RT_LIBRARY} )

#INCLUDE(ModuleInstall OPTIONAL)

SETUP_PLUGIN(${LIB_NAME})
