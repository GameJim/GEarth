
# FIXME: For OS X, need flag for Framework or dylib
IF(${ROOT_NAME}_BUILD_SHARED_LIBS)
    ADD_DEFINITIONS(-DGEARTH_LIBRARY)
ELSE()
    ADD_DEFINITIONS(-DGEARTH_LIBRARY_STATIC)
ENDIF()

#SET(LIB_NAME GEarthViewer)

if(POLICY CMP0020)
  cmake_policy(SET CMP0020 NEW)
endif()
#SET(HEADER_PATH ${${ROOT_NAME}_SOURCE_DIR}/include/${LIB_NAME})
#FILE(GLOB_RECURSE TARGET_PUBLIC_H ${HEADER_PATH}/*.h ${HEADER_PATH}/*.hpp)
FILE(GLOB_RECURSE TARGET_H *.h *.hpp)
FILE(GLOB_RECURSE TARGET_SRC *.cpp *.c)
#list(APPEND TARGET_H ${TARGET_PUBLIC_H})
#FILE(GLOB_RECURSE TARGET_UI *.ui)
#FILE(GLOB_RECURSE TARGET_RESOURCE *.qrc *.rc)


#
#find_package(Qt5Core REQUIRED)
#find_package(Qt5Gui REQUIRED)
find_package(Qt5Widgets REQUIRED)
find_package(Qtitan REQUIRED)

INCLUDE_DIRECTORIES(${${ROOT_NAME}_SOURCE_DIR}/include
	${Qt5Widgets_INCLUDE_DIRS}
	${Qtitan_INCLUDE_DIR}
)


SET(TARGET_COMMON_LIBRARIES GEarth)

#SET(TARGET_EXTERNAL_LIBRARIES osgEarth_LIBRARY)
	
# SET(TARGET_LIBRARIES_VARS
        # Qtitan_LIBRARIES
		# Qt5Gui_LIBRARIES
		# Qt5Widgets_LIBRARIES
		# Qt5Widgets_LIBRARIES)

#LINK_INTERNAL(${LIB_NAME}
#    OpenThreads
#)
#LINK_EXTERNAL(${LIB_NAME} ${CMAKE_THREAD_LIBS_INIT}    ${MATH_LIBRARY} ${RT_LIBRARY} ${DL_LIBRARY})
#LINK_CORELIB_DEFAULT(${LIB_NAME} ${CMAKE_THREAD_LIBS_INIT} ${MATH_LIBRARY} ${RT_LIBRARY} )

#INCLUDE(ModuleInstall OPTIONAL)

SETUP_APPLICATION(GEarthViewer)
