cmake_minimum_required(VERSION 3.5)

project(RenderSystem)                    # 工程名称  必填
set(PROJECT_NAME RenderSystem PARENT_SCOPE)
set(CMAKE_INCLUDE_CURRENT_DIR ON) #当前文件路径

#设置输出目录,必须放在前面
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${GEARTH_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${GEARTH_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${GEARTH_DIR}/bin/debug)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${GEARTH_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${GEARTH_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${GEARTH_DIR}/bin/release)

	
#预编译宏定义
add_definitions(-DCOMMON_EXPORTS)


# 设置库包含目录（头文件目录）
include_directories(${GEARTH_INCLUDE}) # 其他人头文件
include_directories(${GEARTH_INCLUDE}/${PROJECT_NAME}) #自己头文件


#设置库目录
link_directories(${GEARTH_DIR}/lib)


#当前文件信息
FILE(GLOB_RECURSE HEADER_FILES *.h *.hpp)
FILE(GLOB_RECURSE SRC_FILES *.cpp *.c)


#在include中头文件
FILE(GLOB_RECURSE EXTERN_HEADER_FILES "${GEARTH_INCLUDE}/${PROJECT_NAME}/*.*h" "${GEARTH_INCLUDE}/${PROJECT_NAME}/*.*hpp")

# 生成可执行文件SHARED STATIC 
add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SRC_FILES} ${FORMS} ${RESOURCE_FILES} ${EXTERN_HEADER_FILES})

#链接本地库
LINK_SRC_LIB(common)

INSTALLSELF()
